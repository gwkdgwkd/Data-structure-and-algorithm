1、对表的所有操作都可以通过使用数组来实现。虽然数组是动态指定的，但是还是需要对表的大小的最大值进行估计。通常要估计的大一些，从而浪费大量的空间。这是严重的局限，特别是在存在许多未知大小的表的情况下。
   数组实现使得PrintList和Find以线性时间执行，而FindKth则花费常数时间。然而插入和删除的花费是昂贵的。最坏情况为O(N),平均来看，需要移动一半的元素。
   因为插入和删除的运行时间是如此的慢以及表的大小还必须事先已知，所以简单数组一般不用来实现表这种结构。
2、为了避免插入和删除的线性开销，需要允许表可以不连续存储，否则表的部分或全部需要整体移动。
   链表由一系列不必在内存中相连的结构组成。每一个结构均含有表元素和指向包含该元素后继元的结构的指针（Next指针）。最后一个单元的Next指针指向NULL。
   PrintList或Find用线性时间，常熟可能比数组实现要大。FindKth花费O(i)。
3、留出一个标志结点，有时候称之为表头或哑结点，这通常是一种习惯。
4、有时候倒序扫描链表很方便，标准实现无能为力，可以附加一个域，包含指向前一个单元的指针即可，双链表。
5、循环链表。让最后的单元反过来直指第一个单元是一种流行的做饭。它可以有表头，也可以没有表头（有表头，则最后的单元就指向它），还可以是双向链表。
