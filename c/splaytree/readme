1、伸展树保证从空树开始任意连续M次对树的操作最多花费O(MlogN)时间。
2、伸展树基于这样的事实：对于二叉树来说，每次操作最坏情形的时间O(N)并不坏，只要它相对不常发生就行。任何一次访问，即使花费O(N)，任然可能非常快。二叉查找树的问题在于，虽然一系列访问都有可能发生不良操作，但是很罕见。
3、伸展树的基本想法是，当一个节点被访问后，它就要经过一系列AVL树的旋转被放到根上。伸展树不要求保留高度或平衡信息。
