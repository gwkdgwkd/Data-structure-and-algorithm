1、对于大量的输入数据，链表的线性访问时间太慢，不宜使用。
2、一棵树是一些节点的集合。这个集合可以是空集；若非空，则一棵树由根以及0个或多个非空的子树组成。一棵树是N个节点和N-1条边的集合，其中一个节点叫做根。
3、二叉树是一颗树，其中每个节点都不能有多于两个的儿子。二叉树的一个性质是平均二叉树的深度要比N小得多。平均深度O(根号N)，对于二叉查找树，平均值为O(logN)，不幸的是，每个只有一个儿子，深度可以大到N-1。
4、二叉树有许多与搜索无关的重要应用。主要用处之一是在编译器的设计领域。表达式树，树叶是操作数，比如常数或变量，而其他的节点为操作符。
5、中序遍历、后序遍历、前序遍历。
6、二叉树的一个重要的应用是在查找中的使用。使二叉树成为二叉查找树的性质是，对于树中的每个节点X，它的左子树中所有关键字值小于X的关键字值，而它的右子树中所有关键字值大于X的关键字值。
7、一般的删除策略是用其右子树的最小的数据（很容易找到）代替该节点的数据并递归地删除那个节点（现在它是空的）。因为右子树中的最小的节点不可能有左儿子，所以第二次Delete要容易。
8、如果删除次数不多，则通常使用的策略是懒惰删除：当一个元素要被删除时，它扔留在树中，而是只做了一个被删除的记号。这种做法在有重复关键字时很流行，删除时出现频率可以减1。
9、如果向一颗预先排序的树输入数据，那么一连串Insert操作将花费二次时间，而链表实现的代价会非常巨大，因为此时的树将只由那些没有左儿子的节点组成。一种解决办法就是要有一个平衡的附加条件：任何节点的深度不得过深。
